<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:aop="http://www.springframework.org/schema/aop"
  xmlns:tx="http://www.springframework.org/schema/tx"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

  <aop:config>
    <!--    <aop:pointcut id="transactionPointcut" expression="execution(* *..*ServiceImple.upgrade(int,int))"/>-->
    <!--    <aop:advisor advice-ref="transactionAdvice" pointcut-ref="transactionPointcut" />-->
    <!--    <aop:advisor advice-ref="transactionAdvice" pointcut="execution(* *..*ServiceImpl.upgrade*(..))"/>-->
    <aop:advisor advice-ref="transactionAdvice" pointcut="bean(*Service)"/>
  </aop:config>

  <!--  org.springframework.transaction.interceptor.TransactionInterceptor 를 빈으로 등록하는 방법도 있다.-->
  <tx:advice id="transactionAdvice" transaction-manager="transactionManager">
    <tx:attributes>
      <tx:method name="get*" read-only="true"/>
      <tx:method name="*"/>
    </tx:attributes>
  </tx:advice>

  <!-- Transaction Proxy-->
  <!--  <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"/>-->

  <!--  <bean id="transactionPointcut"-->
  <!--    class="org.springframework.aop.aspectj.AspectJExpressionPointcut">-->
  <!--    <property name="expression" value="execution(* *..*ServiceImpl.upgrade*(..))"/>-->
  <!--  </bean>-->

  <!--  <bean id="transactionAdvice" class="springbook.learningtest.jdk.proxy.TransactionAdvice">-->
  <!--    <property name="transactionManager" ref="transactionManager"/>-->
  <!--  </bean>-->

  <!--  <bean id="transactionAdvisor" class="org.springframework.aop.support.DefaultPointcutAdvisor">-->
  <!--    <property name="advice" ref="transactionAdvice"/>-->
  <!--    <property name="pointcut" ref="transactionPointcut"/>-->
  <!--  </bean>-->

  <bean id="userService" class="springbook.user.service.UserServiceImpl">
    <property name="userDao" ref="userDaoJdbc"/>
    <property name="mailSender" ref="mailSender"/>
  </bean>

  <bean id="testUserService" class="springbook.user.service.TestUserServiceImpl"
    parent="userService">
    <property name="id" value="woojung3"/>
  </bean>

  <!-- ProxyFactoryBean 사용-->
  <!--  <bean id="userService" class="springbook.factorybean.TxProxyFactoryBean">-->
  <!--    <property name="transactionManager" ref="transactionManager"/>-->
  <!--    <property name="pattern" value="upgradeLevels"/>-->
  <!--    <property name="target" ref="userServiceImpl"/>-->
  <!--    <property name="serviceInterface" value="springbook.user.service.UserService"/>-->
  <!--  </bean>-->

  <!--  <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">-->
  <!--    <property name="host" value="mail.youzheng.me"/>-->
  <!--  </bean>-->
  <!--Test Bean-->
  <bean id="mailSender" class="springbook.user.service.DummyMailSender"/>

  <bean id="transactionManager"
    class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    <property name="dataSource" ref="dataSource"/>
  </bean>

  <bean id="userDaoJdbc" class="springbook.user.dao.UserDaoJdbc">
    <property name="dataSource" ref="dataSource"/>
  </bean>

  <bean id="connectionMaker" class="springbook.user.dao.connectionmaker.SimpleConnectionMaker"/>

  <bean id="dataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
    <property name="driverClass" value="com.mysql.cj.jdbc.Driver"/>
    <property name="url" value="jdbc:mysql://localhost/springbook"/>
    <property name="username" value="youzheng"/>
    <property name="password" value="youzheng123"/>
  </bean>

  <bean id="jdbcContext" class="springbook.user.dao.JdbcContext">
    <constructor-arg name="dataSource" ref="dataSource"/>
  </bean>

</beans>